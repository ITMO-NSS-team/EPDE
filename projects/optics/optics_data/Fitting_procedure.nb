(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    290675,       5754]
NotebookOptionsPosition[    282851,       5613]
NotebookOutlinePosition[    283296,       5630]
CellTagsIndexPosition[    283253,       5627]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8957442615521345`*^9, 3.895744270581209*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6b273523-eb0a-42b1-aff6-545a34038a93"],

Cell[BoxData["\<\"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\optics_R_exp\\\
\\optics_data\"\>"], "Output",
 CellChangeTimes->{3.895744271052721*^9, 3.895744425469987*^9, 
  3.896150747113861*^9, 3.8967778921132193`*^9, 3.8969467670718775`*^9, 
  3.8975418725142565`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"844abc39-c2df-43be-ad03-4dc0061924c4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"opticsfitgraph", "[", "r0_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "x1", ",", "y", ",", "y1", ",", "data", ",", "data1", ",", 
      "p1", ",", "p2", ",", "f"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gridfilename", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<grid_\>\"", ",", 
        RowBox[{"ToString", "[", "r0", "]"}], ",", "\"\<.csv\>\""}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"rfilename", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<R_\>\"", ",", 
        RowBox[{"ToString", "[", "r0", "]"}], ",", "\"\<.csv\>\""}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Import", "[", "gridfilename", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x1", "=", 
      RowBox[{"N", "[", 
       RowBox[{"x", "/", 
        RowBox[{"Max", "[", "x", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Import", "[", "rfilename", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x1", "=", 
      RowBox[{"Flatten", "[", "x1", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y1", "=", 
      RowBox[{"Flatten", "[", "y", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "y1"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data1", "=", 
      RowBox[{"data", "\[LeftDoubleBracket]", 
       RowBox[{"20", ";;"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"data", ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"Normal", "[", 
       RowBox[{"NonlinearModelFit", "[", 
        RowBox[{"data", ",", 
         RowBox[{"a", "+", 
          RowBox[{"b", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{"c", " ", "t"}], "+", "d"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "t"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"p1", ",", "p2"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8961556054433784`*^9, 3.8961556077382493`*^9}, {
   3.8961556415661163`*^9, 3.8961556692179847`*^9}, {3.8961557167783337`*^9, 
   3.896155952248429*^9}, 3.896156966372904*^9, 3.8961570215712705`*^9, {
   3.896158091165595*^9, 3.8961581062497272`*^9}, {3.8961583922895746`*^9, 
   3.8961584241311502`*^9}, {3.8961584612286177`*^9, 3.896158464042036*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"5ccd276d-bea7-4606-b4d7-920591e9987c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"opticsfitf", "[", "r0_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "x1", ",", "y", ",", "y1", ",", "data", ",", "data1", ",", 
      "p1", ",", "p2", ",", "f"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gridfilename", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<grid_\>\"", ",", 
        RowBox[{"ToString", "[", "r0", "]"}], ",", "\"\<.csv\>\""}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"rfilename", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<R_\>\"", ",", 
        RowBox[{"ToString", "[", "r0", "]"}], ",", "\"\<.csv\>\""}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Import", "[", "gridfilename", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x1", "=", 
      RowBox[{"N", "[", 
       RowBox[{"x", "/", 
        RowBox[{"Max", "[", "x", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Import", "[", "rfilename", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x1", "=", 
      RowBox[{"Flatten", "[", "x1", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y1", "=", 
      RowBox[{"Flatten", "[", "y", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "y1"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data1", "=", 
      RowBox[{"data", "\[LeftDoubleBracket]", 
       RowBox[{"20", ";;"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"Normal", "[", 
       RowBox[{"NonlinearModelFit", "[", 
        RowBox[{"data", ",", 
         RowBox[{"a", "+", 
          RowBox[{"b", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{"c", " ", "t"}], "+", "d"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "t"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "f", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8961559643515573`*^9, 3.8961559731297054`*^9}, 
   3.8961569695959353`*^9, 3.8961570197782116`*^9, {3.8961580783374023`*^9, 
   3.8961580840976877`*^9}, {3.8961583888611155`*^9, 3.896158415477615*^9}, {
   3.8961584659168024`*^9, 3.896158468824747*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"296ecf50-1702-49f4-b6e6-4479849fdec0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"residualdata", "[", "r0_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "x1", ",", "y", ",", "y1", ",", "data", ",", "data1", ",", 
      "p1", ",", "p2", ",", "f"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gridfilename", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<grid_\>\"", ",", 
        RowBox[{"ToString", "[", "r0", "]"}], ",", "\"\<.csv\>\""}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"rfilename", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<R_\>\"", ",", 
        RowBox[{"ToString", "[", "r0", "]"}], ",", "\"\<.csv\>\""}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Import", "[", "gridfilename", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x1", "=", 
      RowBox[{"N", "[", 
       RowBox[{"x", "/", 
        RowBox[{"Max", "[", "x", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"Import", "[", "rfilename", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x1", "=", 
      RowBox[{"Flatten", "[", "x1", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y1", "=", 
      RowBox[{"Flatten", "[", "y", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "y1"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data1", "=", 
      RowBox[{"data", "\[LeftDoubleBracket]", 
       RowBox[{"20", ";;"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"Normal", "[", 
       RowBox[{"NonlinearModelFit", "[", 
        RowBox[{"data", ",", 
         RowBox[{"a", "+", 
          RowBox[{"b", " ", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{"c", " ", "t"}], "+", "d"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "t"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", 
         RowBox[{"y1", "-", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"f", "/.", 
            RowBox[{"t", "\[Rule]", "x1"}]}], "]"}]}]}], "}"}], "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8967779185603724`*^9, 3.8967779670746994`*^9}, {
  3.8967779974048996`*^9, 3.89677800196482*^9}, {3.8967780552810946`*^9, 
  3.8967780780535226`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"fac18e43-2b50-453a-8a8f-d92a272a255e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"residualdata", "[", "0.2", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.896778114536433*^9, 3.896778144181677*^9}, 
   3.8969467600065336`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"fd7b12ba-629b-4101-bee7-e29cbe703390"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", "dat", "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", "dat", "]"}], "\[LeftDoubleBracket]", "2",
           "\[RightDoubleBracket]"}], "-", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "dat", "]"}], "\[LeftDoubleBracket]", 
           "2", "\[RightDoubleBracket]"}], "]"}]}], ")"}], "/", 
       RowBox[{"Max", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "dat", "]"}], "\[LeftDoubleBracket]", 
           "2", "\[RightDoubleBracket]"}], "-", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "dat", "]"}], "\[LeftDoubleBracket]", 
            "2", "\[RightDoubleBracket]"}], "]"}]}], ")"}], "]"}]}]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.896959503067419*^9, 3.896959570423681*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2c124f02-a01b-4a67-b298-b866ed91ead7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"dat1", "\[LeftDoubleBracket]", 
    RowBox[{"10", ";;", 
     RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8967782490716867`*^9, 3.89677824936952*^9}, 
   3.8967783645317097`*^9, {3.896778435210537*^9, 3.8967784485772543`*^9}, {
   3.896778669762148*^9, 3.8967786704331465`*^9}, 3.8969468503650827`*^9, {
   3.8969594026891937`*^9, 3.8969594682209544`*^9}, {3.8969595798866076`*^9, 
   3.8969595930311537`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"0959d589-3cc2-4422-8080-fd4da7d31fc7"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
bJtVLQ==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.6123383582047447}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.896778146179847*^9, 3.8967782498778267`*^9, 3.896778365361168*^9, {
   3.8967784359289513`*^9, 3.8967784489939175`*^9}, 3.8967786709603662`*^9, 
   3.8969467705353193`*^9, 3.8969468515061865`*^9, 3.896959403106851*^9, {
   3.896959437426794*^9, 3.896959460043543*^9}, 3.896959594018108*^9, {
   3.8975418809750547`*^9, 3.8975418837528095`*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"bb55f36f-4a55-4d69-aca9-b81736c7b6ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parabola", " ", "=", " ", 
  RowBox[{"Fit", "[", 
   RowBox[{
    RowBox[{"dat1", "\[LeftDoubleBracket]", 
     RowBox[{"10", ";;", 
      RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"t", "^", "n"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", " ", "t"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.896778153411473*^9, 3.8967781688059015`*^9}, {
   3.896778234250445*^9, 3.8967782423124743`*^9}, {3.896778272536996*^9, 
   3.896778341933096*^9}, {3.896778376201929*^9, 3.8967784562202168`*^9}, {
   3.8967786746745358`*^9, 3.896778675242509*^9}, 3.8969468557899837`*^9, {
   3.896959397420353*^9, 3.8969593975910378`*^9}, 3.896959622208948*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"127c69ae-ef85-4711-ac24-6d02316b4d65"],

Cell[BoxData[
 RowBox[{"0.0577992823850063`", "\[VeryThinSpace]", "+", 
  RowBox[{"5.799848939507342`", " ", "t"}], "-", 
  RowBox[{"22.062710984681438`", " ", 
   SuperscriptBox["t", "2"]}], "+", 
  RowBox[{"36.92496833199854`", " ", 
   SuperscriptBox["t", "3"]}], "-", 
  RowBox[{"29.622280050309776`", " ", 
   SuperscriptBox["t", "4"]}], "+", 
  RowBox[{"9.212387813143975`", " ", 
   SuperscriptBox["t", "5"]}]}]], "Output",
 CellChangeTimes->{
  3.8967782428465557`*^9, {3.896778286151634*^9, 3.8967784571784277`*^9}, 
   3.8967786758079596`*^9, 3.896946772659494*^9, 3.8969468566999836`*^9, 
   3.8969593980392447`*^9, 3.8969596230736246`*^9, 3.897541885744734*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"8c1c3828-e7fa-4279-ac36-ff6fe801456c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"parabola", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.896778253340926*^9, 3.896778262474287*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"23955bc8-a36b-43f2-9f06-040e3f350532"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
dMTfN/t+knhySZef2hk6KiMLflkSqx9UjA13oyM1s1sP/+qLdc+fvEzHncEN
LQr/6lktOFTuR8f3bC3OGPl7zz9jOVcpgI6hH+WHmMR6r+Jl7obQIcrQlc0h
zt6qZXkwkg435bpEV+JPvn7n3sXS4cF5fdSUeEVV/R25JDry43ecVyAONnMs
HiLfsenSgpFNZL+WR2S1mr2m41SsaPYz4qmOqa95b+joiLskd53Y5fi91b7l
dESvaZKQIY573qnbX03Hgr9JKSPkvDSPrbYxaaDjFfd46Fti/avFYcva6NjK
5xCwj1g67Mvk0xGSj4iWljM5b8X23k9ffaNDSqlcei2x7fqlh95O0JHYn5U2
Ts5vTPPmN3WzGNDTVoi+RLxcKvDSqCgDPx9VKrqS854/IqUwIcHAqqGoNWuI
D5S+bOKRZWDXofzmXnJ/PDzWprlkDQO2/NrKFsRLnil+0wQDpTNSfXLkvnl5
tShxmz4DXybmGzHJ/bRv9z5zAyMG9n4RtPUjDh27/NJqPwOTCyLiOsl9tkCr
6pynMwMem7fF+ZL7bk6F01BJKAPB6gJ+d6W4SH44+bg6nIGPh8KuKBPrO4eY
MKIYOOt8cF0luU/9BHOfUUkMRB6jhn9KcDG9j+/EnDcMfHM6lG1C7t+JrsQ+
4x4GOh4L7XwrysWXX93sJvVGrBS83lcgxEWec2iZ8cZGxM5dfEee2Kdle2rJ
lkbcq+Bjhywk5zk/9sxTg0as2SOTYLOA7I9Lh/942TTiedL1rM/kvYn+3iwm
H9AI/ot2c2rIe2U4Xm/h1t2I/PtKWk/Ie7fU/pr2p95GOMVQZzkTFNh0FUmb
z42IFNjlvZL4QnYQd+ePRuTZ0lSTyfsZd87ITWw+EzJ8nwYffaPwc7gitHQj
ExoV1s1GwxSSP7+tEbrLhIQl61F3N4Wzj/auPPmACcGFLVv5iLX0uVcrI5no
0wsbWM2mUBMruNYriYlPhRYHT3dSGN93KHTwDRMJ8iZ5g+R7YXv+z/0VXCZW
16juz2dQaLuxrstjEwsyfm4qKWUUhKTSRnt7Wdgtc/XQrETyfXMi93i8fDOa
7EWOxB8h+ek873XxbkHOgaCVwvNJPRoVOaLlrXhj0BL97A0H3ZkVQQzZdvg+
0n/59zAHv0+yHit5dsBJnqMaMtODNbr808ffdqLvfjHnzNMe7EqUdX75Hxtj
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
       "]]},
     Annotation[#, "Charting`Private`Tag$21150#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.05779940074926131},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0.05779940074926118, 0.5991052048153969}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.896778262995555*^9, 3.89677841201902*^9}, 
   3.896778458386177*^9, 3.8967786772559605`*^9, 3.8969467742023053`*^9, 
   3.896946858035015*^9, 3.8969594053446927`*^9, 3.896959624897931*^9, 
   3.89754188744979*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"0d7f0683-091b-4051-9463-943822df7d3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8967782642134876`*^9, 3.896778267105669*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"43778ff8-91d0-41a0-8453-3a9db9f6386f"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
bJtVLQ==
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
dMTfN/t+knhySZef2hk6KiMLflkSqx9UjA13oyM1s1sP/+qLdc+fvEzHncEN
LQr/6lktOFTuR8f3bC3OGPl7zz9jOVcpgI6hH+WHmMR6r+Jl7obQIcrQlc0h
zt6qZXkwkg435bpEV+JPvn7n3sXS4cF5fdSUeEVV/R25JDry43ecVyAONnMs
HiLfsenSgpFNZL+WR2S1mr2m41SsaPYz4qmOqa95b+joiLskd53Y5fi91b7l
dESvaZKQIY573qnbX03Hgr9JKSPkvDSPrbYxaaDjFfd46Fti/avFYcva6NjK
5xCwj1g67Mvk0xGSj4iWljM5b8X23k9ffaNDSqlcei2x7fqlh95O0JHYn5U2
Ts5vTPPmN3WzGNDTVoi+RLxcKvDSqCgDPx9VKrqS854/IqUwIcHAqqGoNWuI
D5S+bOKRZWDXofzmXnJ/PDzWprlkDQO2/NrKFsRLnil+0wQDpTNSfXLkvnl5
tShxmz4DXybmGzHJ/bRv9z5zAyMG9n4RtPUjDh27/NJqPwOTCyLiOsl9tkCr
6pynMwMem7fF+ZL7bk6F01BJKAPB6gJ+d6W4SH44+bg6nIGPh8KuKBPrO4eY
MKIYOOt8cF0luU/9BHOfUUkMRB6jhn9KcDG9j+/EnDcMfHM6lG1C7t+JrsQ+
4x4GOh4L7XwrysWXX93sJvVGrBS83lcgxEWec2iZ8cZGxM5dfEee2Kdle2rJ
lkbcq+Bjhywk5zk/9sxTg0as2SOTYLOA7I9Lh/942TTiedL1rM/kvYn+3iwm
H9AI/ot2c2rIe2U4Xm/h1t2I/PtKWk/Ie7fU/pr2p95GOMVQZzkTFNh0FUmb
z42IFNjlvZL4QnYQd+ePRuTZ0lSTyfsZd87ITWw+EzJ8nwYffaPwc7gitHQj
ExoV1s1GwxSSP7+tEbrLhIQl61F3N4Wzj/auPPmACcGFLVv5iLX0uVcrI5no
0wsbWM2mUBMruNYriYlPhRYHT3dSGN93KHTwDRMJ8iZ5g+R7YXv+z/0VXCZW
16juz2dQaLuxrstjEwsyfm4qKWUUhKTSRnt7Wdgtc/XQrETyfXMi93i8fDOa
7EWOxB8h+ek873XxbkHOgaCVwvNJPRoVOaLlrXhj0BL97A0H3ZkVQQzZdvg+
0n/59zAHv0+yHit5dsBJnqMaMtODNbr808ffdqLvfjHnzNMe7EqUdX75Hxtj
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
        "]]},
      Annotation[#, "Charting`Private`Tag$21150#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.6123383582047447}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8967782674738407`*^9, 3.896778348951337*^9}, {
   3.8967783800239353`*^9, 3.8967784133514256`*^9}, 3.8967784597352552`*^9, 
   3.8967786787679915`*^9, 3.896946776817746*^9, 3.896946859703411*^9, 
   3.896959406814047*^9, 3.896959627034013*^9, 3.89754189017774*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"f8e66b8f-a0b5-4154-9a28-43ae3cd0b346"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"D", "[", 
     RowBox[{"parabola", ",", "t"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8967787080038867`*^9, 3.8967787265078115`*^9}, {
  3.896946812501834*^9, 3.896946820820674*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"c91089dd-9082-4ca6-afb5-35118eeb13a8"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
nsyD4zvArkWCSzesaOgbvhq6nn9ywcJ26CQN+aCDdEmwkUp8ia49DeWq1bOs
z6d9uUs8x5mGDj+IX2QAK74WCmB1oyHxawrvZqBf8TlLmstleB5WvAbr6+FU
SthX70NDvA3V79bXu+zWnazgT0Pab1pW48BWGmdid92goRwPq57L4DzG8Yg9
4TQ0nM0hbghmbfEI1LwD+cqx7ZJgu8TfXvsf0JBL4v2Vb/B5fDwbcl43noYO
8GdkYjC/MseZI4k09N3TteouuKJG3MA8i4ZGn8bfEwGLx2bvP/6choqDlLXI
8D54n1bacyoPfOiHVwJY9sd+yXMfaMh/0TqeBRxUVivkVkpDZQpbwz7C+9V7
5xjH5XIaSpz14T4Pvi3luOjXSEN2qz/+lsL7SZ+ZmgpqoyGmCf1zjmDNj96D
od3gGEc/ZvC0SXhj1AAN9aZq5OyH990k4HlGxncakuSO8b0L++XZYZVHT3/T
0K7SyNAN4FWBT/dyV2hI0TLZMhX2W+GLxqvv2PpQ4/Ams2zYj0K9c8b14n0o
UDxd+I7iEHbPvKrbsqUPSbLeylmC/V3tvra3U7YP5ZwIEr4AvsossLVvVx8q
44rM0oHzgVBR+zuv24cSPb6Sy+D8UF35/HXxSB/SbDjZIAq+W3do9K9xH3Jw
9v9wSXYI69jZtDHb9CH+U/Gx/HD+pN/zfyp6sQ+dNhjKVZUawn+OMydLePbB
/f6FuLJlCJvJRMVI+/ahTrXkLUVwvjF9Sg3YcaMPxfHM/pPbPITPjZebo/g+
pDTkeXZGbAjvOPjfqktpH4pyV6qcF4T15r7aTinvQ9RKqaV5OF/VhM3MDWv7
EKU6j3WOH/qZSMzZ0dGHurnOvujnHcKm9xWPfhvvQy7UqtgnnPD5EiaJ1wX7
UXOsZNINOO8/eSWoRl3oR1EkR1NpuG8O0DRP//PoR1apaatVM3Rcqd9/y8On
H7nLP2d1nqbjRtFthNmNfvTOjEU+ZYKO+758vLHhYT8S5llQmhuiYwZOWnNa
eT9ybYl/uQHutyNZ0uffiA6gyX0jKcmf6VgtkXdbrcQA0myc38QD96fUg+VR
qvQAmnXvfxf4iY6Xrvc4sShBvnYM6fgHOs43v2NnQxpAp62vCP8ooGMhxgXr
f66QP3zfojeLjgfty/UNSwaQMAtiPHGbjq9ttpcZOj2IDCiO1tNH6Vhp1pqL
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
       "]]},
     Annotation[#, "Charting`Private`Tag$22040#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.896778717132223*^9, 3.8967787269972334`*^9}, {
   3.8969467843560753`*^9, 3.896946821253237*^9}, 3.8969468625016623`*^9, 
   3.8969594097328053`*^9, 3.8969596307800264`*^9, 3.8975418962680864`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"e2fc750c-7897-49e6-acac-3b16a09c1bec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"D", "[", 
     RowBox[{"parabola", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896778823204524*^9, 3.896778824667079*^9}, {
  3.8969468341179695`*^9, 3.8969468362065945`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"2ddea17e-f368-4d40-a60d-e8cd6db139ed"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$20195#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-44.125422710522976`, 6.204783574647138}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8967788252063503`*^9, {3.896946836717417*^9, 3.896946864958662*^9}, 
   3.8969594112741756`*^9, 3.8969596324927683`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"715a41ba-239a-4699-a17a-ae3e9662689f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8967780955713387`*^9, 3.896778123621627*^9}, 
   3.896778246587288*^9},ExpressionUUID->"05e87c98-5f0f-4323-9e35-\
26732e4193c0"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.896778107753135*^9, 3.8967781280497046`*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"7ba88bb1-cd1e-4e6c-91b2-e6f123aff8a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opticsfitgraph", "[", "0.1", "]"}]], "Input",
 CellChangeTimes->{{3.8961558830962863`*^9, 3.8961558863253155`*^9}, 
   3.8961559572125244`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"278c3805-ccb5-4f43-9f25-6a9873e0e9e0"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
n3w3YHnsC8LfD8Gx635cnzD26eHXz/8A93OmDw==
       "]]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwV1Wk41OsfBnBbGZVdTra0qUQ4FZWjc0sLRSrLKZKmSEmFOJIWS5QwqCZ7
JcsosoQhW2TPmhKF7MuYmd/85iTSxn/+L57ruT7X983z4r6f78pT7lanRYSE
hFoE5//3/tOsjqpJ27+F+F9M+SNXILZL2WNAaQsC8rqMCpckYPPjuKQCpd2g
6vXrj4UxYN7anf9QyQZnubfD950uxBHnbxX3lJzxNJLxeYZejdpdysU1SS4Y
5KeF3Authd7qHXlf1V0R+qM3GhfrQRkOSvln7UWw/F77XJVtwmfd27toSt6Q
mfmc5XryLeiPl1VpHPsXL0uWft6o2YH90plGr5J8cDaqe5jG6UARr0WfVL+C
pONOhp3U94jMllt/eO0NrGmpmZOX68IetbS0yTP+qHKUl7Av6MKN+gSZ1zYB
6Cu66ud/qBtbDLRpdjGBMN5uoP3lxkckLz14K0wpGHFUR5PZ3B5cbY2t/ac0
GEYPAvpqNvfin5BBkdXHQrD7+tQN58JeLJn29C9LuoVGr7qS8Od98O2k+3LV
7+CrxG6e1NV+WEd8LnpZdQd5t7Sq17L6obN77XTwyTCY/WFMa7IawGhBsada
ajiKNlP0A2UGcfh+zznLtZHITC1YdK9jENrmq58pN0TCqru332x+EBTR8xPj
Z6KwPMP/mYT2EE6UzL2otImGwoh4Ql3QEJZqRuscjbkLS7LbY1BjGIGUgnV3
lOhQCKv0fWk6gg2md0PzPejYVnlQOt9tBO9C3Cd7G+jo0xCvnYocwRpR7Swd
nwdYk1ei4/x+BPW/03Q638WgZ/wgw99mFO5GN6N+a8Yi7dMvXROvUSy7epK/
NjAWMwPSFZ53R+E6q5Z/RTcOOjXDnutaRrFkKkZfPSIePu6SS63/GgPzz39j
zEbiwbvCvT1qOwZHD+tvnoYJoMzSpubcx5BLSJfUshLAznmc0JMyBitWqNG5
PUnQYScbXRUdR9xnv13MuUd4Fb+fSssfx05Vu7R+28foku7bOV4/Drb91gWU
7MdYfknRitczjuXcK07ZG5Ox5YGqobzIBNxdDTSE+pLx9SeTO2AxATnn3Kfp
21Igtt0srO/DBFxuLrczdE6B35eif1hjEyhLoUm0R6XAtzR7Ydn0BJyH3M7N
jqcgsqE9u0SBBabjem3zB6mYvfu72PAQC0ftnuTy/0sDhd6qu+EVC2SvzaIU
5XRYSDqc2dPEwi1HymnrXemIiP5zk1EXCwVO7spF9HQEibCFKwkWpC7uCLm6
lYHZvZF7NqhMoi7ok/3C6xnYdoiVLOcxCYcFNGZxega+/n3YUMtvEl9uG8u4
tmXA+0779LrgSaygZdQ1qz/FtuezD9pjJ3Et9l+9u9VPYfCl2XKkYhKbnssu
VKVkom/gtIX3Ajbe6NRRW/UykZPS4TQvyQb1hW/ZDbtMGPiaFnkrskErGvAY
ysxEk66blfo6NlhV2b2MA1kICOn+ec2UjUcf9r348/5zSJkFiCQEs7F4PtDB
dHkuuLmb55Z9YSPO9Yij9t5cHBr/dubQLBtrOrWpshdzERGe7ug3x8bfz7qd
eisE81O3HzEWcVDyLIZZrJOHX81DU86rOCCsueXmbXmgXq7QSjzIge3T2GYv
yXwsshVdPvSEI+h9kIXLynxQE1IKXzA4GJa70HpUPx9xdvuXXcniwP26SfuO
4/mgmFfmcAs5uGNFvBPPzofLVGSvawMHFb9MehItCiByOVGjg82BxmEeqya8
EH4PcJCtxYWyv6nhmSeF8C22uSWvx4VMdnL4ouJCjN4eW6i/hYsfFGudw8OF
KJ8x2n7SiIu3VcVe/duYKB8/n0q14MJPL3BudoyJ5S5vGEvcuGiTVlDQMS5G
hPDwGD2Vi5odF0532BbDQXeNJYfBxUu3+iJvt2L06a/TNMrkIrXB164sphgm
500vtuZx4ev/+ZEZUYw5DfWs3AouVpEMTaeEl9j9SVHxRhcXl9u2I+5rCfYS
RhJ0MQJSOsyxN5RS/DhNqVspTiCNphfxU7UUX7eZsLIkCHRYrPvkuKcUSSor
bjKlCGg1K3hpxJTiEevDx0fLCAw0kIz8rWWwXBKs/1aLgOnrdKlWv3LY/7S4
3nuQQP+Klcy5yHJc071jK2pFwDsg6ZheajnmvChO620IPMH9p/ebyxHHObL5
3FECPysCTOxVK+CQMWXUSiWQW3rMZ6KiAvZu7S5LPQn8USjbLyxciWXHpLTa
owg4RPy0GVWsxODWGXrbXQIpzmPN9dqV0HbJdWm+T0B7aUlJ+NFKdPln2FbE
EjDxoT5YmleJvb4nOEGPCRgkHWHQdaswPr9OJT6HwElHxvGn/VXI6+SckGkm
ELxfJT5+sgqr+tUe1rUQYBhEd4Z9rULYSHeLbxsBrpSf+YVFr7GFGyv3qYOA
T+WB7ZsMXuOXnmVS4EcCESumFcppr9HmZ8X8d4xA0fCulnajavyy0m8SmiPQ
ZRb4H820GsbTT357zROYyXmlaGFVjarH/vFjQjxsvbr9ZOOZajj8/qFQK8rD
S3ndmap71fBd+OLURQkeSnYrr8hnVUMhWT/ET4GHcgbfi06vwb231L8CNXmo
PvdQxY5bi65L43vKD/JQMOnm5jhTC5G3V1sbDvGQdtawzEmoDovMp5zeHeYh
xKXb/qJCHZq2JVSPWvNgdko24aZRHdYvqHOdO8JDu13IspyIOkTO7fZYSOWh
z+zCUtGN9Qjb6uPj6c7D9Nod0tkXGnCeby/GC+fh72GThjDfBnQ5Hdr4MYKH
Ww/N/M/ebMBwIj30NY0HRQUbcnV8AxqfGPfcjeLBQNitPaG2ATmRu8Q17/Pg
2xsXFarSiHdjwm6bEnj4FfVV2vlNI7bFSii9zOBB5HuWjIpGEzKl31CqqnhQ
aTWZgm4TPk4MeXi+5mHLk08fnLc34ZLne9tV1Tyc3ieemHOgCdp6wXFBNTw0
xp/SMPFpQopKg8yOeh6iDJUMXRuaEPEwwDShmQfVa7ecil2bEVwb5Pf9g+B9
89Qi65wWXLLcLO4yyUNL8Ja2+g3tCMrfrCq7mIR6NOf7M95b+FUpFG/aQILz
baD/g947iM2Z2W3dRSKNXdYkFfkejUNsxzZ7ElJqGeToaCfCpEV3SrqTiHBl
uiSv6QKDMV/U6E9ixjhr9Kx/N8II+9DZKBLem2oLFWs+Yq9mQmPwQxIDObXh
HSt7kB94yaMqk8TPc52Jmn692K2fmH+tiITWTvE5l7I+nFe9P+xTRcI0ZeWZ
F3/0o+nDQVWHJhKX1U6sGnIYQM9lh6iudyS0ubaLuw8MYjZk09qQHhLy0nxK
7Y9B1Eaz9xoOkxCrTMxdnTQE78sa5mMsEm5byj5JmA/DSC8kJYkkkbXvVPKr
mWGUulDYFdMkpjnKMuMxI5Dy19FV/EmCaW0qSt89Cub3fVM7hfjwNwt5XDg+
imwjsUspInys/Lz/Y2rIGIp+VjzrFOPDcGswXWnTOLYotiTKi/PhsLz9u/D7
cejpNb6TlOBjuok27BE4AaX1CqcUFvMRJ+bobbWGhcXf5K73L+FDvp+ZIlLL
wq9wmvgdKT4WXA+02e45CevpqMPGMnwIPXPMHZYT7J1ji2frZPm4lJBLk6tm
I0GNzD4iz0eFVihF9iIHQ4bG9W0KfMjuv6QdJMXFm8i6dFVFPvo2vn1/pVzw
r+ctofr8wUfeI6wZdSTgW/jmY+YyPo7nGsiqCXpu1GbGbFHiC/bik8C+TEFP
vsyJ/VDmI5ullihlQSI6QPKeuCofoQ9DqP2WJF4R2LhEYGcrQiPnMInIB8kN
MgKrlpfnHThCotmb+K4kcFjUsfqIU4J5eJmNtsBnDeL/W3RFkLsMu5FDAq8K
VjATZ5DoE1/uEi/w3LZrkt1PSfgwgyYeCvyJGHnHyCJh7aN6NkXg6CMFx/e+
IDEoznfJEnh+g5VXSDmJOGO1YxUC93VEPRJ9T+LK9VdqQwK/vPXN6f0HQW4s
affGBKb/dUIz9SOJsUD6QrbA5uk6hSb9JLpGLLhfBC71bX0TOEnigalbjpga
HzEb9aMOc0mMjIuoSQjsOZxks1KQoz/DOsMkBV5vcX6g6isJftZaZ0WBxYQ7
06K/kai7m9GuLPAg869z1B8knPc7GaoLXH4uVVfvN4lDEvZpqwWOVV88PT9P
Yl44QnK9wP8DJDpu5A==
        "]]},
      Annotation[#, "Charting`Private`Tag$4592#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.99987}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8961558866670976`*^9, {3.8961559228303685`*^9, 3.8961559581023483`*^9}, {
   3.8961569749473534`*^9, 3.896156976499566*^9}, {3.896158094535866*^9, 
   3.896158109784829*^9}, {3.896158400620611*^9, 3.8961584282630014`*^9}, 
   3.896158471896428*^9, 3.8967778928241067`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"7ba7cbd8-a863-43fd-8d46-5deaa7c7c8e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opticsfitgraph", "[", "0.2", "]"}]], "Input",
 CellChangeTimes->{{3.896156008702088*^9, 3.896156008762271*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a6943b32-74a5-461e-b46b-6704c8781279"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
DX4L+gdWN90keZ+WhVCjpAWzfvQ+9BOR/cjS9CINQQtcZrz5cZjUl4Y6Zmj0
tsAjNt+/meT899kJGrRWpC0/P6+G5E9/OkdpaLTCSeGH616S3zYtCtRgtqJv
4YnJo0l+Yce/b3Ra4eNn7CMm+Yn4KncNVisecXYUHpNQ8KvzdNJwa0XknC0P
dkopeGoLDTTYraj7FT3fl+RL/k0vTivSEd1gRzw7TDSizm3F971/LD4RG2Ry
ROrRrYj9pScuJ9b91V+lzmtFwWNXk1kUeV6aHctRT23FEeWLYS9J3r+DlqLO
bwX7e+lCkPHa4sPi1EtayfwuHLORuLxOOUxd0ArbDQs8/vVHJhdHvZfke/1e
fCdOWzbaS53Whlklm779c3zYdRd1jTZ8nnzseRdpH505yVKd2YZ4l017R5Px
T/66p69u1gbrUtATif3NjJTVWW0weGEW8S/fuPNp/yi3Nlj612SpES+7ayUc
xW7DWMamOdnEDvWvi0Zx2jB3Vl+4gNhIBxmjuG24tXuTNa+XPJ+Xf0gYFd0G
3Rtzr7wgVjy9OGoUrw0T5R4f+ETqf2V+CRyV2oYt0W0XlL+R/devVb6j+G0Y
k+ZTXEhcZVbrPqqkDRYnbFblEuft3OQ0StCGvsqsH4u/U3hxt9VgVG8bxu/q
VaokTqjfoTOK1o6zzyPP3uijEKMjHVHTaIeZrmM3h+TBy/eL1JjtoI8b1tlD
cs7pgSo1s3bcnp604CTx5qwTOWqsdkySy/7yhdS7DjBS1NzaoaNneusQyZ3M
z8SpsdvxeOTQ1Thik11qYWqcdtj/nrnImFgvIYajxm2Hw+aRaRGkvXKDrpda
dDtil4g6S0n+W+eWixqvHX9kZ5gGE3cvn2KpltqOeFn7umk/KNScTtJX47fD
6mPQFHPi/CwTZbWSdnRuNy99SepfDTzrVxW043T1TNtskiea2wpVe9uxVXf+
teX9FC7velekSusALb5xYTJxSMLcDFWNDryYvd4ti3hfw8cEVWYH4kttIv2J
t4xeFqVq1oEiz31S/59k/+haGqjK6sD3jRMdnH6R9Sd8ra+qWwcU065fFpCc
7D3cVdkdCJvxKfEa8cTfbCdVTge8TxZf7SRWs+gwUOV2wGiPieEe4qFdu3VU
ozvwbu/AsgmkP1FC74gKj/jl4CIPktc1HBSppHYgI3VUXiZxwejBKhV+B8o8
4iVMUp/hys1RKemAWqTmYdUBsh8Nl0tREXRgwT32p0ckv8o/G6fS24Ef7V83
LCcO+60epkLrREqLeNtF4gMWVzgqGp24OEWLnka8dfd4LxVmJ+7yf+QsI155
746LilknnuyrO/6beG7jNEsVVif01sf0NhKbj3mkr+LWiUsmxesek/GZK0yV
VdidyFTd+BLE6mde9CtzOtHeceyGF/Ff/myhMrcTeacvesURS35nFilHd6JI
tuLYJNJfg8WCDGVeJ6borLysQly4uyBBObUTfV7/xYP4zT3XKGV+Jz45Ri/6
N/7DxvJA5ZJO+Ly/Y7ObOHbMel9lQSdOzD26ehtx+Iomd+XeTgjXHfiVRHzo
zFYnZVoXljlvm6NDxv//1/kaXTCcHRCZTfI1f/boKDO7IKm+baxB8gWWfSNK
Zl2YcjtFZTzJLf2OiJRYXchJ9JfXIvmUxOEqJbcunF/tr2X+m6zHTadylNhd
qDwQqqpCTNNVTFHidOHEqIFbUmJqxfk4JW4XpNYJ1nOJm85ohSlFd+F20MCr
//6Q9Tj7GkeJ14U5W9YevUDyd38meCmldmHtW+0Fa4gfW951UeJ3YcXUzSdk
Sf11vxmWSiVd5Jy/tfgvySMSn+grCbpQf07r6g3iI03mykq9Xcj1Ub7II96h
m96vSOtG6cpnWw8Re7g5ChU1uiHVTHv2g9yPc0R2kSKzGwfXT7qmQvq3znHO
UDTrhnhSjOQHqZ82WJigyOrGg/zmgS/E2lbuUYpu3ajZmbbcldQz9lQFKrK7
8Xeiy7dckn9L9PRV5HQjwDJOspRY0CRwV+R2Y+X5X7fbiL/q+jopRncjd2mJ
rz9pn+kmMlDkkfrl80zeEydHcHQUU7vxvXfyvj7imzn9Iwr8blzvvHssjDhy
MFCkUNIN2XGb+xYMkvWYHC4VBN0It17Byif979oTlqPQ241b85U6h0j9+vvK
KQq0Hpyzs2nqIl7UHBWnoNGDCfNWzd1O2tuOHR2mwOyBxuyFbGPi/9yvcxTM
ejBgudZ7CfHos5O8FFg9GLvqP0VrYtncey4Kbj2I9fYOmkrcN2hoqcDuQfJ8
jFMlbrF6qq/A6YFT3ZR+C+LSPVbKCtwevDRMO/GIjM+//7pfProHca2O4THE
qc1zhPK8Hqz6FmBUTHxn7Ici+dQehCak1SuQ9hfcF2fI83vAufRh6jXiE2e/
JMiX9OCkvaLNBGK/3FVR8oIesLZ69U8n7T2HagLle3tgzZ678jv5PJZYb/KV
p4nw0mFaQBjxbP9Wd3kNEax/D8k8JzZI2uEkzxQhPGvtb29iXYHEQN5MhF2G
9AwfYvlx+3XkWSJc8be9/Ye4331gRM5NBDuDmSJ7Ml7b2RMiObYIVdonGd0k
r8hlVMtxRAi2VVzgRfLcofAcOa4IkawxR6eR602zVkuRixYhTyZzzL/7j/eP
iZPjiWC7MPH4FZJHJ+mGyaWKoJfvr1xJ8pOCmxw5vggVT0YzPxP7j5viJVci
Qv+EN7b/Pq+NK5Nc5AQirKwu6/hDvOyciaVcrwiq3QMx//7fDh+e6cvRxJic
6+lyj/T//9dxGmIEt3ZvZxOPs3nXL8sUg7rc96CN1CsGzBXKmokR6tnZ9Jv4
V9LHIlmWGHnll8Z7DlHoFCzNkHUTY5TzFutW0r5qXGmCLFuMXe56dyuI81au
jZLliFEvYMrShsl6fK4+UJYrhpf2QWt70j7hA9tXNlqMn5VdHrtJfcxwu7ss
T4zhWR4WvcTBNrudZFPF6KraafmFmBPQayDLFyO97MXXRuLNDw7qyJaIoVVT
+nUG6c9V+GdERiCGrEFDkx+x03iuSKZXDO/iN6V2ZHyTVXLVMjQJJlX2/v1M
cr3IszkyGhK8ORiT8IVYJU89RYYpgVASW9FJ/Gf4cpyMmQTm121dBoi7bcaH
ybAk6Js8kpZBXBNwhyPjRuptT+ieJ85/MM1Lhi1B5drD088QvxI+dJHhSFBq
sqBvHXHieFNLGa4EKdZ5xhrEl1e90JeJlmDvUsUFDsQhkbOVZXgSvAe7dBrx
vrzMfkaqBPqCr5O2EW/5O1/I4JP+2RsWniB2sy0oYpRIyPOgeYwMMTiuGQyB
BNWOLj6y5H5NH5YnMHolUPa4nTiJWL9lXRSDJsXwC7ub6sRq/16HakhhEK4T
F0I8tGqrL4MphfdQ9dLdxKLILneGmRTCgybiWcR1eXucGCwpmo+O6P8l4xX8
/W7AcJPC1K/4UwVxhu0RHQZbCvWoFVM0SH0SZ3iEzpEi6f3sozrEVx+eEtG5
Uny8umNkKnFYi0I1PVpK5uGBzLF/yXqsdz6HzpPiVVD4VFuSb12tlUJPleJ9
TmTbDuKV56/F0flSeDjWe/273nkfJ4TRS6SwGJr8eBOx+Ug8hy6Q4vK8TacP
EjPtZnjRe6Ww3uaaNoFYfe8TFzqNgrhpyyFd4r//XodqkPuIKl58nFjS8kqf
ziTP0VaJaQxxg56jMt2Mwn2/3ceWEheuzu6nscg+u2W5cwLxm/POQpobmcfy
cIkgfvixsIjGJvPozGPZ6eR+YkfcMmgcCsL0iM8HSB5uV5VA41J4vTDuyRDx
/1/HRVPwls8qGyb2fSQIpPHIuvywUCuctF/T6uNLSyX99S5dHU+8YILIncan
sOHt/U9OxJb//zqfXGf+6oOTiadc6DegkXPyot/0T7bEmv+O+2RfnbS/uTSd
9E/7/08vnIN5u8+Q/H/Ug1MQ
       "]]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
tq6donL9P6piZVo=
        "]]},
      Annotation[#, "Charting`Private`Tag$4824#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.999832787172184}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8961560091533527`*^9, {3.8961580984571037`*^9, 3.8961581113939657`*^9}, 
   3.8961584325974183`*^9, 3.896158473479722*^9, 3.8967778928945837`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"fbc7be3b-1169-4bc3-99d1-205d51d6c7b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opticsfitgraph", "[", "0.3", "]"}]], "Input",
 CellChangeTimes->{{3.896156020482578*^9, 3.8961560321380987`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"9e54ed40-77b0-4d61-aba0-73eb3f65a665"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
1uDnI7b25FDFEPwPGZWlZQ==
       "]]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
tchm+/8AG/xZMw==
        "]]},
      Annotation[#, "Charting`Private`Tag$5031#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.9997}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.896156032974249*^9, 3.896158119391835*^9, 
  3.896158435011984*^9, 3.8961584750575953`*^9, 3.8967778929535832`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"71d726c6-6dfa-4bb8-a20a-05497a879cad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opticsfitgraph", "[", "0.4", "]"}]], "Input",
 CellChangeTimes->{3.896156038753395*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"a423de7d-575b-4b23-8ae8-9d5f49c19e7c"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
usvXj1EW+fXrwei0eI/y/wC886r4
       "]]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
axWHWLbjpTcs/P5NoHuFJJjI9v8Aw2BSfA==
        "]]},
      Annotation[#, "Charting`Private`Tag$5238#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.99983}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8961560396400747`*^9, 3.8961581234926224`*^9, 
  3.896158436713499*^9, 3.8967778930095835`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"4ea1321e-4716-4baa-807c-6e939d8297d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opticsfitgraph", "[", "0.5", "]"}]], "Input",
 CellChangeTimes->{{3.896156060494376*^9, 3.8961560638259964`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"e703a431-5916-4337-9370-d3674ce2e7e7"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
REzUykyqz/+X35Qf7Z4I6y/y48cXnuf/AYnam88=
       "]]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
ReBPpR3sC1wnbhX88vs3952k1Ttc5vr/AA6efH4=
        "]]},
      Annotation[#, "Charting`Private`Tag$5445#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.99978}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8961560609242325`*^9, 3.8961560644752855`*^9}, 
   3.8961581274323235`*^9, 3.8961584382894673`*^9, 3.8961584769837008`*^9, 
   3.896777893065583*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"81edc807-5e5d-4485-8b5e-e144b9f94ba5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opticsfitf", "[", "0.1", "]"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"11e65c6a-d648-4544-bb46-5b938c2169d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.7937194475021443`"}], "+", 
  RowBox[{"1.154319555817642`", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{"0.8305321157003214`", "\[VeryThinSpace]", "+", 
     RowBox[{"92.53331321275623`", " ", "t"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.896156291543908*^9, 3.896156983386882*^9, 
  3.896157027193314*^9, 3.896158441318425*^9, 3.8961584789511633`*^9, 
  3.8967778930985847`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"1ce9107e-3ed8-49d9-a485-f2f3d90df4fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opticsfitf", "[", "0.2", "]"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"da6aeea0-90c2-42cb-ab4c-65e43735e20f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.9788107928567081`"}], "+", 
  RowBox[{"1.272448875269659`", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{"0.9981832737070772`", "\[VeryThinSpace]", "+", 
     RowBox[{"93.91409616101483`", " ", "t"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8961562974297557`*^9, 3.896156989610375*^9, 
  3.8961570286756067`*^9, 3.896158443370858*^9, 3.896158480153637*^9, 
  3.8967778931465836`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"0246b2cc-4c52-4668-a8a3-c8de4ab2981a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opticsfitf", "[", "0.3", "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"b786885d-ae24-4163-9ffe-4982afad68a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.1639162856750962`"}], "+", 
  RowBox[{"1.3915808863805366`", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{"1.117628405778848`", "\[VeryThinSpace]", "+", 
     RowBox[{"87.44807107554114`", " ", "t"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8961563029664607`*^9, 3.8961569912205563`*^9, 
  3.896157029733271*^9, 3.8961584479973335`*^9, 3.896158481506535*^9, 
  3.8967778932925835`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"e9254815-a5ed-4650-87db-24dc58c678bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opticsfitf", "[", "0.35", "]"}]], "Input",
 CellChangeTimes->{3.8961830846970415`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"99687d88-6f08-45fa-a6c9-ee3bb3e7372a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.3291489894417684`"}], "+", 
  RowBox[{"0.8574312526258469`", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{"0.4141383346735879`", "\[VeryThinSpace]", "+", 
     RowBox[{"76.73560902641815`", " ", "t"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.896183085582985*^9, 3.896777893333583*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"d2ca4d6e-7729-4774-9b5a-a176fca459d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opticsfitf", "[", "0.4", "]"}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"45ba2024-fff5-4f00-9a5c-9a9682f18b0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.311995973905801`"}], "+", 
  RowBox[{"0.8467949168437876`", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{"0.38957620182352765`", "\[VeryThinSpace]", "+", 
     RowBox[{"64.15946080453008`", " ", "t"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8961563072387824`*^9, 3.896156995164237*^9, 
  3.896157030923088*^9, 3.8961584500261602`*^9, 3.8961584832754602`*^9, 
  3.8967778933776135`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"d04dc373-595f-474a-8dde-19b65a1dbaf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"opticsfitf", "[", "0.5", "]"}]], "Input",
 CellChangeTimes->{{3.8961560696314545`*^9, 3.896156069713726*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"a40d9ded-ec91-4a67-822e-b13eabbfcd90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.38212367136490966`"}], "+", 
  RowBox[{"0.8915505438463871`", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{"0.4558484222056781`", "\[VeryThinSpace]", "+", 
     RowBox[{"71.68350994957764`", " ", "t"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8961560702668676`*^9, 3.896156997178842*^9, 
  3.8961570324297175`*^9, 3.8961584514992065`*^9, 3.896158484667597*^9, 
  3.8967778934526143`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"892bc3e3-501d-417b-904f-23d5ea3a5706"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aplot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.7937194475021443`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "0.9788107928567081`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3", ",", "1.1639162856750962`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.35", ",", "0.3291489894417684`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", "0.311995973905801`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.38212367136490966`"}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.896156309756793*^9, 3.89615637313173*^9}, {
  3.8961564952913976`*^9, 3.8961565005414762`*^9}, {3.8961566910724683`*^9, 
  3.896156694614365*^9}, {3.8961831138130693`*^9, 3.896183138958481*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"dd6181f0-0a45-46ad-936d-eee013725ead"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.1, 0.7937194475021443}, {0.2, 0.9788107928567081}, {0.3, 
      1.1639162856750962`}, {0.35, 0.3291489894417684}, {0.4, 
      0.311995973905801}, {0.5, 0.38212367136490966`}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.09166666666666691, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.09166666666666691, 0.5}, {0, 1.1639162856750962`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.896183139610437*^9, 3.8967778935256166`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"d64c5e88-63fc-4a40-a26b-975162f68efd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bplot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "1.154319555817642`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "1.272448875269659`"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3", ",", "1.3915808863805366`"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.35", ",", " ", "0.8574312526258469`"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", "0.8467949168437876`"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.8915505438463871`"}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8961564526992826`*^9, 3.896156478752178*^9}, {
  3.8961566980349073`*^9, 3.8961567012100906`*^9}, {3.8962358426039753`*^9, 
  3.896235848081726*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"4ebec804-dd52-47dd-ae13-d755c37a1988"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.1, 1.154319555817642}, {0.2, 1.272448875269659}, {0.3, 
      1.3915808863805366`}, {0.35, 0.8574312526258469}, {0.4, 
      0.8467949168437876}, {0.5, 0.8915505438463871}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.09166666666666691, 0.8165290296473018},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.09166666666666691, 0.5}, {0.8165290296473018, 
   1.3915808863805366`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8961564797289605`*^9, 3.896156708092248*^9, 
  3.8962358488466177`*^9, 3.896777893588586*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"5d000db9-43ed-41ce-8134-28270daad6f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cplot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.8305321157003214`"}], "\[VeryThinSpace]", "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "0.9981832737070772`"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3", ",", "1.117628405778848`"}], "\[VeryThinSpace]", "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.35", ",", "0.4141383346735879`"}], "\[VeryThinSpace]", "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", "0.38957620182352765`"}], "\[VeryThinSpace]", "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.4558484222056781`"}], "\[VeryThinSpace]", 
      "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8961567095786095`*^9, 3.8961567648911943`*^9}, {
  3.896235860079273*^9, 3.896235864637211*^9}, {3.8962620868954124`*^9, 
  3.8962620870941973`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"7b0256f0-60a3-4861-bfde-6249117dca74"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.1, 0.8305321157003214}, {0.2, 0.9981832737070772}, {0.3, 
      1.117628405778848}, {0.35, 0.4141383346735879}, {0.4, 
      0.38957620182352765`}, {0.5, 0.4558484222056781}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.09166666666666691, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.09166666666666691, 0.5}, {0, 1.117628405778848}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8961567657007504`*^9, 3.8962358652974343`*^9, 
  3.8962620886943245`*^9, 3.8967778936496572`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"0c47f4d7-292a-4d67-82a8-d33a04a371dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFormula", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.35", ",", "0.4141383346735879`"}], "\[VeryThinSpace]", "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", "0.38957620182352765`"}], "\[VeryThinSpace]", "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.4558484222056781`"}], "\[VeryThinSpace]", 
      "}"}]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962620950462894`*^9, 3.8962621204609213`*^9}, 
   3.896262227527944*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"209f3121-0425-4c74-9c1b-82f6d24dc841"],

Cell[BoxData[
 RowBox[{"1.66310713472706`", "\[VeryThinSpace]", "-", 
  RowBox[{"6.26106696112356`", " ", "Global`t"}], "+", 
  RowBox[{"7.6930990721616235`", " ", 
   SuperscriptBox["Global`t", "2"]}]}]], "Output",
 CellChangeTimes->{3.896262123460081*^9, 3.896262230633645*^9, 
  3.896777898395318*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"733c9606-6222-419b-bbd7-e37dd1199e15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cplotf1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.6270841051442384`", "\[VeryThinSpace]", "+", 
      RowBox[{"2.1435321296529772`", " ", "t"}], "-", 
      RowBox[{"2.7470575447677814`", " ", 
       SuperscriptBox["t", "2.5"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0.1", ",", "0.3"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8962621359647336`*^9, 3.896262176145825*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"3ab510df-f0a3-4004-991c-4603e824acbb"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwVyntUTAkAx/F2hJWSHqQSRkK0ohSV+uWUiGS3EhvDMtKiNlaizVqJRkqW
dFaTpDJNDyZU9GJSU/SYprmXqbSUymPnUXNvSWsb7fjjd77nc86PuTcyIJSh
o6OzWbuvNQxjFqWnV+DtzQXm/Tw5Xt7wbbiRWYHAgPi+rjw58mRH3uRmV2Cj
yo9P8uXw8Kk1ExRUwEAyx7KuQI5fbNhnaysqUN8qKMm+I4e47xZL0VmBvvX6
+awyOZJ+Wjzd3aISJvHW3DaRHJND7I/1cCvB/MOMk9MnR/XWOu/me1Xoy7m+
wnyhAu/H9YNdH1SjOqfavpStwM3osasXyx5BkxAmL8xSYObIkc6zTY+xxbqM
tbpHAcaCzN06YiE6dy394YulEsHf8T9e+rUGhVNq0rBTCVoQQBiN1eD2o273
Zq4SjZM7JVtPPkGClf073nMlxvfNbzs0uRYsdji/3ViFw+k+lFdiLZLCLwvY
fiosKnW3Tfm2DvG7kjK+P6uCO/mJXXilDkUFPf6Ha1RIaUwWnjcRIS/UXsQY
VcFD1G/lkiXCpdJ4l0LHATjxDFN3LK5HfObsxdkRAwhjzbD1zK/HivBNsTa5
Axg1f/1kxKEBy8zfyP76ewCiO3GxkaUNmFuU9emW0SAG1n1YVen5FC2E3cPT
GwexW8ScerzpKdbosNcWxw1iqoXz+MeNz3D9Pj8rrXQQM6MMRnxkz3Cj5XEx
UzGInTyhQcj2RkzMlZtVTlPjn2rvNd3tjUjcRW61XKTGi47kCOe9TTglLmS4
rVVjrLlYuKWvCb6vT83a/KMacXVppm6RzbAQ332pf1SNzdn+p6+NNuM54ZP2
X5IaQcG9+uUnWhCdx1cpc9SoNHS5XjBBDIHdEo/oKjV23Dzoxzonht0X3WA9
Qg0vs0iTeN1WTMoMffDqvRoXrji/+i2lFQOJetGO42rov+14utJQgmTukrJb
phSUbh5lNVwJTNPK0xKWUtB1Eu7hTGtDeKMHL9mTgpNwQ1SYfxvEgzYLZUEU
0podz99NbYNmf6Y05iCFVK/k2yHP23CS5IQEnqJQ4+5DRFhIIbO9mh6VSsGo
6MAE191S5GsM+iV8CuPxn73DsqRYmV9cfrSSglW3kqPpl0IeE8VZ30qhg+fX
NWxDIOT3d34RPRQeds9w5YUSkGT7DndTFOozPLmPCwnE6bycckiXxuG6Dj0X
BYE3McfNd8ygsZf389B2JYESlUDJ0zqQM9p1QkWAk9tWrtbaedOsO+WDBIo0
UreEmTQ0xLYtq4cJOHAalHfNaFzolaWu0hCIkaz/rGtBI/ebF7OdDUkMJTrU
8ufQuNq3b2LwdBJiyvc+pXVC/bDqmBEJ217vDLe5NA4mmgrLTEhwz/Vvk2i9
3Choj9MsEsGjotiReTSq55G8lUwSivSuCC9rGgIGOyVoPonuPcbKZK2z+uno
KGsSw9ts2TKtz+Qbbyi1IWE1OuJ2YAEN3+UBcsclJObaTb2WYkPD1biXCFxK
ouq8+6t2re2Gj1QdtSPxer+/JXMhjenll5NLlpG4KNU7U6I1g8s8RtqTmDRU
Vjim9VDsPdbQcu1f6NGybhGNftZaHxMHEn8yeO9StJZBuszRkUTGuQ//tmv9
P3vFfaw=
       "]]},
     Annotation[#, "Charting`Private`Tag$82261#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.1, 0.8327503672672064},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 0.3}, {0.8327503672672064, 1.1347274553339506`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8962621564470987`*^9, 3.8962621870735598`*^9}, 
   3.8967778985713177`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"632bb8a8-afd9-4fac-a193-495ecc207073"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cplotf2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.66310713472706`", "\[VeryThinSpace]", "-", 
      RowBox[{"6.26106696112356`", " ", "t"}], "+", 
      RowBox[{"7.6930990721616235`", " ", 
       SuperscriptBox["t", "2"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0.3", ",", "0.5"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.896262235213479*^9, 3.896262244759058*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"d6cbf16f-ac74-48f4-8340-d278dbb093a4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
mpqd5YAnV7QrS4cF/wOSj8Kw
       "]]},
     Annotation[#, "Charting`Private`Tag$82309#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.3, 0.38920700949700504`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.3, 0.5}, {0.38920700949700504`, 0.4771659561694056}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8962622459006777`*^9, 3.896777898600315*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"3bf2aa4d-d07e-408a-af2f-709b45e331e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"cplot", ",", "cplotf1", ",", "cplotf2"}], "]"}]], "Input",
 CellChangeTimes->{{3.896262178551133*^9, 3.8962622048150263`*^9}, {
  3.896262249450983*^9, 3.8962622532818885`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0f94e0f7-6561-4b21-aa59-09e519526759"],

Cell[BoxData[
 TemplateBox[{
  "Show", "gcomb", 
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{\\\"cplot\\\", \\\",\\\", \
GraphicsBox[List[List[List[List[], List[], \
TagBox[List[Directive[Skeleton[3]], LineBox[Skeleton[1]]], \
Function[Annotation[Slot[1], \\\"Charting`Private`Tag$82261#1\\\"]]]]], \
List[]], List[Rule[DisplayFunction, Identity], Rule[Ticks, List[Automatic, \
Automatic]], Rule[AxesOrigin, List[0.1`, 0.8327503672672064`]], \
Rule[FrameTicks, List[List[Automatic, \
Charting`ScaledFrameTicks[List[Skeleton[2]]]], List[Automatic, \
Charting`ScaledFrameTicks[List[Skeleton[2]]]]]], Rule[GridLines, List[None, \
None]], Rule[DisplayFunction, Identity], Rule[PlotRangePadding, \
List[List[Scaled[0.02`], Scaled[0.02`]], List[Scaled[0.05`], \
Scaled[0.05`]]]], Rule[PlotRangeClipping, True], Rule[ImagePadding, All], \
Rule[DisplayFunction, Identity], Rule[AspectRatio, NCache[Power[GoldenRatio, \
-1], 0.6180339887498948`]], Rule[Axes, List[True, True]], Rule[AxesLabel, \
List[None, None]], Rule[AxesOrigin, List[0.1`, 0.8327503672672064`]], \
RuleDelayed[DisplayFunction, Identity], Rule[Frame, List[List[False, False], \
List[False, False]]], Rule[FrameLabel, List[List[None, None], List[None, \
None]]], Rule[FrameTicks, List[List[Automatic, Automatic], List[Automatic, \
Automatic]]], Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, \
List[Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[Skeleton[2]], \
Rule[Skeleton[2]], Rule[Skeleton[2]]]], Rule[\\\"DefaultMeshStyle\\\", \
AbsolutePointSize[6]], Rule[\\\"ScalingFunctions\\\", None], \
Rule[\\\"CoordinatesToolOptions\\\", List[Rule[Skeleton[2]], \
Rule[Skeleton[2]]]]]], Rule[PlotRange, List[List[0.1`, 0.3`], \
List[0.8327503672672064`, 1.1347274553339506`]]], Rule[PlotRangeClipping, \
True], Rule[PlotRangePadding, List[List[Scaled[0.02`], Scaled[0.02`]], \
List[Scaled[0.02`], Scaled[0.02`]]]], Rule[Ticks, List[Automatic, \
Automatic]]]], \\\",\\\", GraphicsBox[List[List[List[List[], List[], \
TagBox[List[Directive[Skeleton[3]], LineBox[Skeleton[1]]], \
Function[Annotation[Slot[1], \\\"Charting`Private`Tag$82309#1\\\"]]]]], \
List[]], List[Rule[DisplayFunction, Identity], Rule[Ticks, List[Automatic, \
Automatic]], Rule[AxesOrigin, List[0.3`, 0.38920700949700504`]], \
Rule[FrameTicks, List[List[Automatic, \
Charting`ScaledFrameTicks[List[Skeleton[2]]]], List[Automatic, \
Charting`ScaledFrameTicks[List[Skeleton[2]]]]]], Rule[GridLines, List[None, \
None]], Rule[DisplayFunction, Identity], Rule[PlotRangePadding, \
List[List[Scaled[0.02`], Scaled[0.02`]], List[Scaled[0.05`], \
Scaled[0.05`]]]], Rule[PlotRangeClipping, True], Rule[ImagePadding, All], \
Rule[DisplayFunction, Identity], Rule[AspectRatio, NCache[Power[GoldenRatio, \
-1], 0.6180339887498948`]], Rule[Axes, List[True, True]], Rule[AxesLabel, \
List[None, None]], Rule[AxesOrigin, List[0.3`, 0.38920700949700504`]], \
RuleDelayed[DisplayFunction, Identity], Rule[Frame, List[List[False, False], \
List[False, False]]], Rule[FrameLabel, List[List[None, None], List[None, \
None]]], Rule[FrameTicks, List[List[Automatic, Automatic], List[Automatic, \
Automatic]]], Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, \
List[Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[Skeleton[2]], \
Rule[Skeleton[2]], Rule[Skeleton[2]]]], Rule[\\\"DefaultMeshStyle\\\", \
AbsolutePointSize[6]], Rule[\\\"ScalingFunctions\\\", None], \
Rule[\\\"CoordinatesToolOptions\\\", List[Rule[Skeleton[2]], \
Rule[Skeleton[2]]]]]], Rule[PlotRange, List[List[0.3`, 0.5`], \
List[0.38920700949700504`, 0.4771659561694056`]]], Rule[PlotRangeClipping, \
True], Rule[PlotRangePadding, List[List[Scaled[0.02`], Scaled[0.02`]], \
List[Scaled[0.02`], Scaled[0.02`]]]], Rule[Ticks, List[Automatic, \
Automatic]]]]}], \\\"]\\\"}]\\).\"", 2, 21, 1, 24804252636757236835, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8967778986443176`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"3f09e01e-2bb6-4001-8b52-7052ab8ca459"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"cplot", ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1:eJwVyntUTAkAx/F2hJWSHqQSRkK0ohSV+uWUiGS3EhvDMtKiNlaizVqJRkqW
dFaTpDJNDyZU9GJSU/SYprmXqbSUymPnUXNvSWsb7fjjd77nc86PuTcyIJSh
o6OzWbuvNQxjFqWnV+DtzQXm/Tw5Xt7wbbiRWYHAgPi+rjw58mRH3uRmV2Cj
yo9P8uXw8Kk1ExRUwEAyx7KuQI5fbNhnaysqUN8qKMm+I4e47xZL0VmBvvX6
+awyOZJ+Wjzd3aISJvHW3DaRHJND7I/1cCvB/MOMk9MnR/XWOu/me1Xoy7m+
wnyhAu/H9YNdH1SjOqfavpStwM3osasXyx5BkxAmL8xSYObIkc6zTY+xxbqM
tbpHAcaCzN06YiE6dy394YulEsHf8T9e+rUGhVNq0rBTCVoQQBiN1eD2o273
Zq4SjZM7JVtPPkGClf073nMlxvfNbzs0uRYsdji/3ViFw+k+lFdiLZLCLwvY
fiosKnW3Tfm2DvG7kjK+P6uCO/mJXXilDkUFPf6Ha1RIaUwWnjcRIS/UXsQY
VcFD1G/lkiXCpdJ4l0LHATjxDFN3LK5HfObsxdkRAwhjzbD1zK/HivBNsTa5
Axg1f/1kxKEBy8zfyP76ewCiO3GxkaUNmFuU9emW0SAG1n1YVen5FC2E3cPT
GwexW8ScerzpKdbosNcWxw1iqoXz+MeNz3D9Pj8rrXQQM6MMRnxkz3Cj5XEx
UzGInTyhQcj2RkzMlZtVTlPjn2rvNd3tjUjcRW61XKTGi47kCOe9TTglLmS4
rVVjrLlYuKWvCb6vT83a/KMacXVppm6RzbAQ332pf1SNzdn+p6+NNuM54ZP2
X5IaQcG9+uUnWhCdx1cpc9SoNHS5XjBBDIHdEo/oKjV23Dzoxzonht0X3WA9
Qg0vs0iTeN1WTMoMffDqvRoXrji/+i2lFQOJetGO42rov+14utJQgmTukrJb
phSUbh5lNVwJTNPK0xKWUtB1Eu7hTGtDeKMHL9mTgpNwQ1SYfxvEgzYLZUEU
0podz99NbYNmf6Y05iCFVK/k2yHP23CS5IQEnqJQ4+5DRFhIIbO9mh6VSsGo
6MAE191S5GsM+iV8CuPxn73DsqRYmV9cfrSSglW3kqPpl0IeE8VZ30qhg+fX
NWxDIOT3d34RPRQeds9w5YUSkGT7DndTFOozPLmPCwnE6bycckiXxuG6Dj0X
BYE3McfNd8ygsZf389B2JYESlUDJ0zqQM9p1QkWAk9tWrtbaedOsO+WDBIo0
UreEmTQ0xLYtq4cJOHAalHfNaFzolaWu0hCIkaz/rGtBI/ebF7OdDUkMJTrU
8ufQuNq3b2LwdBJiyvc+pXVC/bDqmBEJ217vDLe5NA4mmgrLTEhwz/Vvk2i9
3Choj9MsEsGjotiReTSq55G8lUwSivSuCC9rGgIGOyVoPonuPcbKZK2z+uno
KGsSw9ts2TKtz+Qbbyi1IWE1OuJ2YAEN3+UBcsclJObaTb2WYkPD1biXCFxK
ouq8+6t2re2Gj1QdtSPxer+/JXMhjenll5NLlpG4KNU7U6I1g8s8RtqTmDRU
Vjim9VDsPdbQcu1f6NGybhGNftZaHxMHEn8yeO9StJZBuszRkUTGuQ//tmv9
P3vFfaw=
         "]]},
       Annotation[#, "Charting`Private`Tag$82261#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.1, 0.8327503672672064},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.1, 0.3}, {0.8327503672672064, 1.1347274553339506`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
mpqd5YAnV7QrS4cF/wOSj8Kw
         "]]},
       Annotation[#, "Charting`Private`Tag$82309#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.3, 0.38920700949700504`},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.3, 0.5}, {0.38920700949700504`, 0.4771659561694056}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8962621896690893`*^9, 3.896262205229682*^9}, 
   3.8962622535911355`*^9, 3.8967778987183156`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"fca510de-ae4e-4b51-a6a0-79b35b7429e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dplot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "92.53331321275623`"}], "\[VeryThinSpace]", "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "93.91409616101483`"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3", ",", "87.44807107554114`"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.35", ",", "76.73560902641815`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", "64.15946080453008`"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "71.68350994957764`"}], "\[VeryThinSpace]", "}"}]}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.89615677884016*^9, 3.896156825154436*^9}, {
  3.8962358687800255`*^9, 3.8962358792428665`*^9}, {3.89635094135159*^9, 
  3.896350942209789*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"a856c092-ddf0-4a3f-8100-d80c75faa061"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.1, 92.53331321275623}, {0.2, 93.91409616101483}, {0.3, 
      87.44807107554114}, {0.35, 76.73560902641815}, {0.4, 
      64.15946080453008}, {0.5, 71.68350994957764}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.09166666666666691, 62.5064255069476},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.09166666666666691, 0.5}, {62.5064255069476, 
   93.91409616101483}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.896156825919489*^9, 3.896157035433781*^9, 
  3.8962358798914976`*^9, 3.896350943085208*^9, 3.896777898767316*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"41222a3e-4748-4569-b7de-957fc3cf2af3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dplot1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"107.9835588206598`", "\[VeryThinSpace]", "-", 
     RowBox[{"278.35427810713514`", " ", "t"}], "+", 
     RowBox[{"1090.5808847614962`", " ", 
      SuperscriptBox["t", "2"]}], "+", 
     RowBox[{"3893.2930526632795`", " ", 
      SuperscriptBox["t", "3"]}], "-", 
     RowBox[{"27548.27716786023`", " ", 
      SuperscriptBox["t", "4"]}], "+", 
     RowBox[{"34090.80193281391`", " ", 
      SuperscriptBox["t", "5"]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0.1", ",", "0.5"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8963509076472754`*^9, 3.896350929507449*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"47f44720-431b-4b4d-8b77-65d17bed98d5"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$82413#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.1, 57.74486658056338},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 0.5}, {57.74486658056338, 94.04012791499646}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.896350919055376*^9, 3.8963509299002757`*^9}, 
   3.8967778988013163`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"02c3924a-3c78-4115-90be-2cf6db67952d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dplot", ",", "dplot1", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8963509319878855`*^9, 3.8963509627103643`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"e3292315-71e8-42cb-b147-12b21ac9e6a3"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0.1, 92.53331321275623}, {0.2, 93.91409616101483}, {0.3, 
       87.44807107554114}, {0.35, 76.73560902641815}, {0.4, 
       64.15946080453008}, {0.5, 71.68350994957764}}]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$82413#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.09166666666666691, 62.5064255069476},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.896350937810815*^9, 3.8963509632228837`*^9}, 
   3.8967778988163157`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"eb4d8d3f-0eb3-420d-b286-565db18a6e9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFormula", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "92.53331321275623`"}], "\[VeryThinSpace]", "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "93.91409616101483`"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3", ",", "87.44807107554114`"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.35", ",", "76.73560902641815`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", "64.15946080453008`"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "71.68350994957764`"}], "\[VeryThinSpace]", "}"}]}],
     "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962620673513603`*^9, 3.896262071772561*^9}, {
  3.8963508964727707`*^9, 3.8963508966003385`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"6405c00f-8816-4e7c-9838-2a74ad54ea0d"],

Cell[BoxData[
 RowBox[{"107.9835588206598`", "\[VeryThinSpace]", "-", 
  RowBox[{"278.35427810713514`", " ", "t"}], "+", 
  RowBox[{"1090.5808847614962`", " ", 
   SuperscriptBox["t", "2"]}], "+", 
  RowBox[{"3893.2930526632795`", " ", 
   SuperscriptBox["t", "3"]}], "-", 
  RowBox[{"27548.27716786023`", " ", 
   SuperscriptBox["t", "4"]}], "+", 
  RowBox[{"34090.80193281391`", " ", 
   SuperscriptBox["t", "5"]}]}]], "Output",
 CellChangeTimes->{3.896262077473609*^9, 3.8963508997559195`*^9, 
  3.896777901341976*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"cb6af075-a729-4e1d-80e3-92bdd22baadd"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "parabola", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"PlaneCurve\", \"Parabola\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               StyleBox[
                TemplateBox[{
                  TagBox[
                   TagBox["\"parabola\"", 
                    IPOPTLink`Private`TagBoxWrapper[
                    "Entity" -> {"PlaneCurve", "Parabola"}]], Identity], 
                  "\" \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"plane curve\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], LineIndent -> 0}]}, "RowDefault"], 
                LineIndent -> 0], 
               LinebreakAdjustments -> {1, 100, 0, 0, 100}], TraditionalForm],
              PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Example plots", "scanner" -> "Data", "id" -> 
     "PlotPod:PlaneCurve", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {{
                    InsetBox[
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJw1mHc41v/3x+3tvhEVSgifpCgKDc47yYxSZsmslFXZs2SrcFd3sklmuI0Q
Ga9bRvaeZY9usj8i29f3+v2+55/ndZ3r+Tj/nuc5QhaPbtyjoaKi4qKmovqv
/l9xkP9fsUtf2ePXN/BkAX1+hj8reMzXif/i8gqe7PJINnF6Bo/RTcu6/ZrB
k1tnbAj9vXiMucNusakXT5Zk7TJrysFjXMk/R6Jy8OSIicjKbVM8JqL2pVLG
FE/G06z4hlfiMHWCvZ9VBY5MoqzSPQphx1LfrexWmrOTo3eTlW9tsGALPkbH
5Q6xkTn66G3c85iwoBMkfvwgC1nSJzdFKpQBk9biZ/jhy0xOLan/+lKfDmu4
eS8eARP5Ld9bWwEzGsy59btU5CgDWc0uNd3KmAqzZ+UP7gyhJztZkQLtd7ZA
96RmmLg6HdlX69Yj2eJ10Kp+G+owR0P+2G/xlv7uKshcKjnfk05NjsJaf5R5
L4PV01ZSrDUV+c6bDLTbuwgm5ltyWcI7iI853OOY+Sx8f73PXjd+E31oMBlQ
6KGAftbtiLHxNZQj6ldx3Hgc/FQDrsrKriIF7Uzq5u4hCCE9MEFFy0j+anPD
SY0+KNz1spCkXkIkq9g0X64OOC6/tczxdxHxO7jSMm+3Q/xjz4Dl2UX0jv6m
eCylHQJH3dOL+xZR0XfWzqmydtCvcplXyl1EmcV+8fwP2mE18LGHgekiMtUK
5aGQ2+DRoToRas8FNOWHY5JYawGncxH+KcuzKDDnRE3i6QYgnRbrLRmcRa0/
U17SszQARbxIvOX7LFJo0rsVPFYPt/h6WlZjZtGbdSOOqbf1AJs8vGrKs4gz
cHkIv1YHLOXvsn8TZ9CT+zYM1LXfIRF71yMl+xt9VrZ/+tCtBn7Ii4orC/5G
lBWkGa5bA/tOF3oasvxGmI2aUOepGggU6hZ8PjSNbJK2Jwqmq8GGhsemI3Aa
RSitt4wYV4NsNXHXqXcKaWmcPflDrQoaVYnHvrpRkIIrmeumXCWwXH2bdsaS
gioxRmg9UAlq19+I5WhRUNQHPpMHa2SoNiSIJAtTkJp4mtNSCRkqHr4SDGv6
hTKuG9CaKpIh96X/QQvBX6ht5x/ta1EVQGx1YmKpm0AtJdv4oe2v0NHpGOSf
P4GOCefx76v9Chx9Dgy7sRPoRMk2m2/YVwgdeUz358kEkne0SGQX/AqBS7ZU
Q/wTSOvArRc/r5SA2757a3mPxpHbERqbG7Ff4I6B3pTRgTHUJnXWNMupADbE
pblUaMdQGMFa10S1ACK3cBelF0ZRWdtulhJfAXR8qAtn+T6KTBbUg5PIn0Fl
9oJcqcsoqk8xplTgP4Pkc+HAQz0j6NxfT1XrL3mwozesWiE+jBiMlI8cMCKB
/GZkTAT1MNpcSR3dx0oCh8QbC/b9Q6hJp97auTwbfv2uiTgSMoSoVLTa7x/N
htZnWZM+U4OoRPDGAs2fTEjMcPe7nDaAjBOuPRJMzwCl7X2oTuQHcqrkfbZ4
OwUE8hafwHo/KucYD2DiSYHNu80iRc396LT8Fdr3LclQ0BT44qNLPyLiu8wP
XE4Gsdh1vad1fUh7hJ+UcvojsFwYnpWx7UVhzLp+ayIf4Nd8acInrBc9/vlp
2XUyEaqSIm8I8fSipwHRP+xSE8GL5UYxrqIHcVsos5WLJ8J8f7XfNL4HWXv4
b7fbxEOH2ye+hM9dKGC1CZuviwbSiaBmnuAu5J3w7k+pYTS8HLH0eWXchZrW
wt+5TEeBstrhX+70XcisjDchnz0Kig4Q8nQNOpF90PO2K+bvIbrIWY1lsx2J
nEzK6jtDhJqp57O//VvQv3bXiGb8obARkr8dL9OCZoxDzQ8/fwWSEuO4m2PN
SDWW/pLr1EuIsFM+XQrNSIItRZam7AXc/5fB5eVGI0rLTdhycgkGpq2XuxKP
65EDm/9ys7w/XIwr4xgRqEckaquJ28V+8FhxTojYXIe0Vf0pgef8oM9HW3nr
eB0qq7ITKcB8IYOeM6RpshZpP99ys7HwAQ18BJfd7WrkLsDFF/PLHZ7m1h4V
YqlGnjzCl4143SFf5++Z7uIqpJKdStC55gZ8REMDhf1V6Cxij1qsdoGZg/yx
7O2VyNv2pulUjyMIftXMrnxWib4/ZMpyPeoIure9KpwlK1EPo/ThS44OUBY3
ODL4koyuiY3b+h56AgevYJrGoRXoer+7n7eEHfgEfbCr/l2OHoycvKu4ZgNT
9TSEE2rliFO8MdSx0RpKtGu6tmjK0MFnlaXnAx7ALUMNkzi3ErSsEOd7UeUu
fIvO9KHvKUZEnZhPCSqWIDHI9tFOphjVpfryu2pZwJZ5K0VhvgiN8bD3+dqb
QZyN7pMhywJUyy7sxr9lBCdwkn9dqz+j0prih8y2hlCWy+jNKfoZtSdTHppO
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
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1811981#1"]& ]}}, {}}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, DisplayFunction -> 
                    Identity, PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, Axes -> {True, True}, 
                    AxesLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox["y", TraditionalForm]}, AxesOrigin -> {0, 0}, 
                    AxesStyle -> Directive[
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                    DisplayFunction :> Identity, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    AbsoluteThickness[0.2]], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Automatic, 
                    Method -> {
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "ScalingFunctions" -> None}, PlotLabel -> FormBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\[LongEqual]", "1"}]}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], TraditionalForm]],
                     PageWidth -> 150, TextAlignment -> Center], 
                    TextCell[
                    Style[
                    Row[{
                    Row[{Style["a", Italic] == 1}]}], 
                    GrayLevel[0.5]], PageWidth -> 150, TextAlignment -> 
                    Center]], TraditionalForm], 
                    PlotRange -> {{-4., 4.}, {0., 4.}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {
                    Scaled[0.02], 
                    Scaled[0.02]}, Ticks -> {None, None}}], {192., -94.5}, 
                    ImageScaled[{0.5, 0.5}], {360., 180.}], 
                    InsetBox[
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1812007#1"]& ]}}, {}}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, DisplayFunction -> 
                    Identity, PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, Axes -> {True, True}, 
                    AxesLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox["y", TraditionalForm]}, AxesOrigin -> {0, 0}, 
                    AxesStyle -> Directive[
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                    DisplayFunction :> Identity, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    AbsoluteThickness[0.2]], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Automatic, 
                    Method -> {
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "ScalingFunctions" -> None}, PlotLabel -> FormBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\[LongEqual]", 
                    RowBox[{"-", "1"}]}]}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], TraditionalForm]],
                     PageWidth -> 150, TextAlignment -> Center], 
                    TextCell[
                    Style[
                    Row[{
                    Row[{Style["a", Italic] == -1}]}], 
                    GrayLevel[0.5]], PageWidth -> 150, TextAlignment -> 
                    Center]], TraditionalForm], 
                    PlotRange -> {{-4., 4.}, {-4., 0.}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {
                    Scaled[0.02], 
                    Scaled[0.02]}, Ticks -> {None, None}}], {576., -94.5}, 
                    ImageScaled[{0.5, 0.5}], {360., 180.}]}}, {
                   Directive[Antialiasing -> False], 
                   GrayLevel[0.85], {{
                    LineBox[{{0, 0}, {0, -189.}}]}, {
                    LineBox[{{384., 0}, {384., -189.}}]}, {
                    LineBox[{{768., 0}, {768., -189.}}]}, {
                    LineBox[{{0, 0}, {384., 0}}]}, {
                    LineBox[{{384., 0}, {768., 0}}]}, {
                    LineBox[{{0, -189.}, {384., -189.}}]}, {
                    LineBox[{{384., -189.}, {768., -189.}}]}}}}, ImageSize -> 
                 400, {PlotRangePadding -> {6, 5}}, ContentSelectable -> True,
                  ImageSize -> 400]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"plotted for \"", "t", "\" from \"", 
                    RowBox[{"-", "2"}], "\" to \"", "2"}, "RowDefault"], 
                    "\[NoBreak]", "\")\""}], {
                   FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  IPOPTLink`Private`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Fewer examples", "input" -> 
         "PlotPod:PlaneCurve__Fewer examples"}, {}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Equations", "scanner" -> "Data", "id" -> 
     "EquationsPod:PlaneCurve", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "4"}, {
     XMLElement["subpod", {"title" -> "Parametric equations"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"PlaneCurve\", \"Parabola\"][EntityProperty[\"PlaneCurve\", \
\"ParametricEquations\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 RowBox[{
                   RowBox[{"x", "(", "t", ")"}], "\[LongEqual]", 
                   StyleBox[
                    RowBox[{"2", " ", "a", " ", "t"}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}]}]}, {
                 RowBox[{
                   RowBox[{"y", "(", "t", ")"}], "\[LongEqual]", 
                   StyleBox[
                    RowBox[{"a", " ", 
                    SuperscriptBox["t", "2"]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{"\[LongEqual]"}}, 
                 "Rows" -> {{"\[LongEqual]"}}}, AllowScriptLevelChange -> 
               False, DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1}}}], "Column"], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> "Cartesian equation"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"PlaneCurve\", \"Parabola\"][EntityProperty[\"PlaneCurve\", \
\"CartesianEquation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"y", "\[LongEqual]", 
              FractionBox[
               SuperscriptBox["x", "2"], 
               RowBox[{"4", " ", "a"}]]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> "Polar equation"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"PlaneCurve\", \"Parabola\"][EntityProperty[\"PlaneCurve\", \
\"PolarEquation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{"r", "(", "\[Theta]", ")"}], "\[LongEqual]", 
               StyleBox[
                RowBox[{"4", " ", "a", " ", 
                  RowBox[{"tan", "(", "\[Theta]", ")"}], " ", 
                  RowBox[{"sec", "(", "\[Theta]", ")"}]}], {
                 GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{"\"(\"", "\[NoBreak]", 
               
               TemplateBox[{
                "\"for a parabola opening upward with vertex at the origin \
and semilatus rectum \"", 
                 FormBox[
                  TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["2", HoldForm], "\[InvisibleSpace]", "a"}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                   "RowDefault"], TraditionalForm]}, "RowDefault"], 
               "\[NoBreak]", "\")\""}], {
             FontFamily -> "Roboto", FontSize -> 10, 
              GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "4"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "EquationsPod:PlaneCurve__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "sec(x) is the secant function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Sec.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Sec", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Secant.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Properties", "scanner" -> "Data", "id" -> 
     "PropertiesPod:PlaneCurve", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"PlaneCurve\", \"Parabola\"][EntityProperty[\"PlaneCurve\", \
\"Classes\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox["\"algebraic\"", 
                 IPOPTLink`Private`TagBoxWrapper[
                 "EntityClass" -> {"PlaneCurve", "Algebraic"}]], Identity], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               TagBox[
                TagBox["\"conic\"", 
                 IPOPTLink`Private`TagBoxWrapper[
                 "EntityClass" -> {"PlaneCurve", "Conic"}]], Identity], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               TagBox[
                TagBox["\"parametric\"", 
                 IPOPTLink`Private`TagBoxWrapper[
                 "EntityClass" -> {"PlaneCurve", "Parametric"}]], Identity], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               TagBox[
                TagBox["\"quadratic\"", 
                 IPOPTLink`Private`TagBoxWrapper[
                 "EntityClass" -> {"PlaneCurve", "Quadratic"}]], Identity]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Basic properties", "scanner" -> "Data", "id" -> 
     "BasicPropertiesPod:PlaneCurve", "position" -> "500", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> "Algebraic degree"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"PlaneCurve\", \"Parabola\"][EntityProperty[\"PlaneCurve\", \
\"AlgebraicDegree\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{"d", "\[LongEqual]", 
               StyleBox["2", {
                 GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "BasicPropertiesPod:PlaneCurve__Approximate form"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Conic properties", "scanner" -> "Data", "id" -> 
     "ConicPropertiesPod:PlaneCurve", "position" -> "600", "error" -> "false",
      "numsubpods" -> "5"}, {
     XMLElement["subpod", {"title" -> "Eccentricity"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"PlaneCurve\", \"Parabola\"][EntityProperty[\"PlaneCurve\", \
\"Eccentricity\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{"e", "\[LongEqual]", 
               StyleBox["1", {
                 GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> "Focal parameter"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"PlaneCurve\", \"Parabola\"][EntityProperty[\"PlaneCurve\", \
\"FocalParameter\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{"p", "\[LongEqual]", 
               StyleBox[
                RowBox[{"2", " ", "a"}], {
                 GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> "Semilatus rectum"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"PlaneCurve\", \"Parabola\"][EntityProperty[\"PlaneCurve\", \
\"SemilatusRectum\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{"L", "\[LongEqual]", 
               StyleBox[
                RowBox[{"2", " ", "a"}], {
                 GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> "Foci"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"PlaneCurve\", \"Parabola\"][EntityProperty[\"PlaneCurve\", \
\"Foci\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"{", 
              FormBox[
               TemplateBox[{"\"\[VeryThinSpace]\"", 
                 RowBox[{"(", "\[NoBreak]", 
                   TemplateBox[{",", "\",\"", 
                    TagBox["0", HoldForm], 
                    TagBox["a", HoldForm]}, "RowWithSeparators"], 
                   "\[NoBreak]", ")"}], "\"\[VeryThinSpace]\""}, 
                "RowDefault"], TraditionalForm], "}"}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata,\
numberdata"}]}], 
     XMLElement["subpod", {"title" -> "Directrix"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"PlaneCurve\", \"Parabola\"][EntityProperty[\"PlaneCurve\", \
\"Directrix\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"y", "\[LongEqual]", 
              RowBox[{"-", "a"}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "5"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Derived curves", "scanner" -> "Data", "id" -> 
     "DerivedCurvesPod:PlaneCurve", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"PlaneCurve\", \"Parabola\"], \
{EntityProperty[\"PlaneCurve\", \"Evolute\"], EntityProperty[\"PlaneCurve\", \
\"Involute\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"evolute\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  IPOPTLink`Private`TagBoxWrapper["Label"]], 
                 FormBox[
                  TagBox[
                   TagBox["\"semicubical parabola\"", 
                    IPOPTLink`Private`TagBoxWrapper[
                    "Entity" -> {"PlaneCurve", "SemicubicalParabola"}]], 
                   Identity], TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"involute\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  IPOPTLink`Private`TagBoxWrapper["Label"]], 
                 FormBox[
                  TagBox[
                   TagBox["\"parabola involute\"", 
                    IPOPTLink`Private`TagBoxWrapper[
                    "Entity" -> {"PlaneCurve", "ParabolaInvolute"}]], 
                   Identity], TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "DerivedCurvesPod:PlaneCurve__More"}, {}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Related entities", "scanner" -> "Data", "id" -> 
     "RelatedEntitiesPod:PlaneCurve", "position" -> "800", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> "Associated people"}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"PlaneCurve\", \"Parabola\"][EntityProperty[\"PlaneCurve\", \
\"AssociatedPeople\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"Menaechmus\"", 
                  IPOPTLink`Private`TagBoxWrapper[
                  "Entity" -> {
                    IPOPTLink`Private`PeopleData, "Menaechmus::965v3"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Euclid\"", 
                  IPOPTLink`Private`TagBoxWrapper[
                  "Entity" -> {
                    IPOPTLink`Private`PeopleData, "Euclid::2m284"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Apollonius of Perga\"", 
                  IPOPTLink`Private`TagBoxWrapper[
                  "Entity" -> {
                    IPOPTLink`Private`PeopleData, 
                    "ApolloniusOfPerga::95k59"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Pappus\"", 
                  IPOPTLink`Private`TagBoxWrapper[
                  "Entity" -> {
                    IPOPTLink`Private`PeopleData, "Pappus::zbtf6"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Blaise Pascal\"", 
                  IPOPTLink`Private`TagBoxWrapper[
                  "Entity" -> {
                    IPOPTLink`Private`PeopleData, "BlaisePascal::6q6n4"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Galileo Galilei\"", 
                  IPOPTLink`Private`TagBoxWrapper[
                  "Entity" -> {
                    IPOPTLink`Private`PeopleData, "GalileoGalilei::rxsr7"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"David Gregory\"", 
                  IPOPTLink`Private`TagBoxWrapper[
                  "Entity" -> {
                    IPOPTLink`Private`PeopleData, "DavidGregory::f26n4"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Isaac Newton\"", 
                  IPOPTLink`Private`TagBoxWrapper[
                  "Entity" -> {
                    IPOPTLink`Private`PeopleData, "IsaacNewton::bhz5x"}]], 
                 Identity], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False, False, False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False, False, False, False, False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "2"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "parabola", "template" -> 
        "Assuming \"parabola\" is a plane curve${separator}Use as ${desc} or \
${desc} or ${desc} or ${desc} instead", "count" -> "5", "pulldown" -> "false",
         "default" -> "{\"C\", \"parabola\"} -> {\"PlaneCurve\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "PlaneCurve", "desc" -> "a plane curve", "input" -> 
          "{\"C\", \"parabola\"} -> {\"PlaneCurve\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Geometry", "desc" -> "a geometric object", "input" -> 
          "{\"C\", \"parabola\"} -> {\"Geometry\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"parabola\"} -> {\"Word\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Periodical", "desc" -> "a periodical", "input" -> 
          "{\"C\", \"parabola\"} -> {\"Periodical\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Species", "desc" -> "a species specification", "input" -> 
          "{\"C\", \"parabola\"} -> {\"Species\"}"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "SubCategory", "word" -> "parabola", "template" -> 
        "Assuming parabola${separator}Use ${desc} instead", "count" -> "2", 
        "pulldown" -> "false", "default" -> 
        "{\"DPClash\", \"PlaneCurveE\", \"parabola\"} -> {\"Parabola\", \
\"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "Parabola", "desc" -> "parabola", "input" -> 
          "{\"DPClash\", \"PlaneCurveE\", \"parabola\"} -> {\"Parabola\"}"}, \
{}], 
        XMLElement[
        "value", {
         "name" -> "ParabolicSegment", "desc" -> "parabolic segment", "input" -> 
          "{\"DPClash\", \"PlaneCurveE\", \"parabola\"} -> \
{\"ParabolicSegment\"}"}, {}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
PlaneCurveSourceInformationNotes.html", "text" -> "Plane curve"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "8", "datatypes" -> "PlaneCurve", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "0.665", "parsetiming" -> "0.084", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP41641h7d25h92id59c0f0000163gii1481ada226", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "9", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa41651h7d25h92id59c0f00002a2eh90d47i0db671494138648170584556", "version" -> 
    "2.6", "inputstring" -> "parabola"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2023, 6, 26, 17, 31, 40.6509179`9.361645236493265}, "Line" -> 
    92, "SessionID" -> 24804252636757236835}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "parabola"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1364., {523.8544921875, 529.1455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.8967787006789217`*^9},ExpressionUUID->"458de89e-93b7-4849-b2d3-\
8e4f596a97b9"]
}, Open  ]]
},
WindowSize->{1428., 735.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d4e4385f-fa46-4cb3-8e46-c0503f05fd2b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 250, 4, 28, "Input",ExpressionUUID->"6b273523-eb0a-42b1-aff6-545a34038a93"],
Cell[833, 28, 352, 5, 32, "Output",ExpressionUUID->"844abc39-c2df-43be-ad03-4dc0061924c4"]
}, Open  ]],
Cell[1200, 36, 3156, 74, 295, "Input",ExpressionUUID->"5ccd276d-bea7-4606-b4d7-920591e9987c"],
Cell[4359, 112, 2536, 59, 257, "Input",ExpressionUUID->"296ecf50-1702-49f4-b6e6-4479849fdec0"],
Cell[6898, 173, 2683, 65, 257, "Input",ExpressionUUID->"fac18e43-2b50-453a-8a8f-d92a272a255e"],
Cell[9584, 240, 283, 6, 28, "Input",ExpressionUUID->"fd7b12ba-629b-4101-bee7-e29cbe703390"],
Cell[9870, 248, 1218, 31, 28, "Input",ExpressionUUID->"2c124f02-a01b-4a67-b298-b866ed91ead7"],
Cell[CellGroupData[{
Cell[11113, 283, 609, 11, 28, "Input",ExpressionUUID->"0959d589-3cc2-4422-8080-fd4da7d31fc7"],
Cell[11725, 296, 13950, 265, 243, "Output",ExpressionUUID->"bb55f36f-4a55-4d69-aca9-b81736c7b6ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25712, 566, 864, 18, 28, "Input",ExpressionUUID->"127c69ae-ef85-4711-ac24-6d02316b4d65"],
Cell[26579, 586, 751, 15, 32, "Output",ExpressionUUID->"8c1c3828-e7fa-4279-ac36-ff6fe801456c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27367, 606, 318, 7, 28, "Input",ExpressionUUID->"23955bc8-a36b-43f2-9f06-040e3f350532"],
Cell[27688, 615, 9094, 167, 236, "Output",ExpressionUUID->"0d7f0683-091b-4051-9463-943822df7d3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36819, 787, 229, 4, 28, "Input",ExpressionUUID->"43778ff8-91d0-41a0-8453-3a9db9f6386f"],
Cell[37051, 793, 21218, 385, 243, "Output",ExpressionUUID->"f8e66b8f-a0b5-4154-9a28-43ae3cd0b346"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58306, 1183, 486, 11, 28, "Input",ExpressionUUID->"c91089dd-9082-4ca6-afb5-35118eeb13a8"],
Cell[58795, 1196, 14387, 254, 239, "Output",ExpressionUUID->"e2fc750c-7897-49e6-acac-3b16a09c1bec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73219, 1455, 491, 12, 28, "Input",ExpressionUUID->"2ddea17e-f368-4d40-a60d-e8cd6db139ed"],
Cell[73713, 1469, 10972, 199, 232, "Output",ExpressionUUID->"715a41ba-239a-4699-a17a-ae3e9662689f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84722, 1673, 177, 3, 28, "Input",ExpressionUUID->"05e87c98-5f0f-4323-9e35-26732e4193c0"],
Cell[84902, 1678, 175, 2, 32, "Output",ExpressionUUID->"7ba88bb1-cd1e-4e6c-91b2-e6f123aff8a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85114, 1685, 245, 4, 28, "Input",ExpressionUUID->"278c3805-ccb5-4f43-9f25-6a9873e0e9e0"],
Cell[85362, 1691, 9952, 182, 243, "Output",ExpressionUUID->"7ba7cbd8-a863-43fd-8d46-5deaa7c7c8e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95351, 1878, 213, 3, 28, "Input",ExpressionUUID->"a6943b32-74a5-461e-b46b-6704c8781279"],
Cell[95567, 1883, 16160, 284, 245, "Output",ExpressionUUID->"fbc7be3b-1169-4bc3-99d1-205d51d6c7b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111764, 2172, 215, 3, 28, "Input",ExpressionUUID->"9e54ed40-77b0-4d61-aba0-73eb3f65a665"],
Cell[111982, 2177, 9954, 182, 245, "Output",ExpressionUUID->"71d726c6-6dfa-4bb8-a20a-05497a879cad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121973, 2364, 189, 3, 28, "Input",ExpressionUUID->"a423de7d-575b-4b23-8ae8-9d5f49c19e7c"],
Cell[122165, 2369, 9959, 182, 245, "Output",ExpressionUUID->"4ea1321e-4716-4baa-807c-6e939d8297d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132161, 2556, 215, 3, 28, "Input",ExpressionUUID->"e703a431-5916-4337-9370-d3674ce2e7e7"],
Cell[132379, 2561, 9969, 182, 245, "Output",ExpressionUUID->"81edc807-5e5d-4485-8b5e-e144b9f94ba5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142385, 2748, 143, 2, 28, "Input",ExpressionUUID->"11e65c6a-d648-4544-bb46-5b938c2169d1"],
Cell[142531, 2752, 506, 10, 32, "Output",ExpressionUUID->"1ce9107e-3ed8-49d9-a485-f2f3d90df4fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143074, 2767, 144, 2, 28, "Input",ExpressionUUID->"da6aeea0-90c2-42cb-ab4c-65e43735e20f"],
Cell[143221, 2771, 509, 10, 32, "Output",ExpressionUUID->"0246b2cc-4c52-4668-a8a3-c8de4ab2981a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143767, 2786, 144, 2, 28, "Input",ExpressionUUID->"b786885d-ae24-4163-9ffe-4982afad68a8"],
Cell[143914, 2790, 511, 10, 32, "Output",ExpressionUUID->"e9254815-a5ed-4650-87db-24dc58c678bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144462, 2805, 189, 3, 28, "Input",ExpressionUUID->"99687d88-6f08-45fa-a6c9-ee3bb3e7372a"],
Cell[144654, 2810, 410, 8, 32, "Output",ExpressionUUID->"d2ca4d6e-7729-4774-9b5a-a176fca459d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145101, 2823, 144, 2, 28, "Input",ExpressionUUID->"45ba2024-fff5-4f00-9a5c-9a9682f18b0f"],
Cell[145248, 2827, 512, 10, 32, "Output",ExpressionUUID->"d04dc373-595f-474a-8dde-19b65a1dbaf8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145797, 2842, 212, 3, 28, "Input",ExpressionUUID->"a40d9ded-ec91-4a67-822e-b13eabbfcd90"],
Cell[146012, 2847, 513, 10, 65, "Output",ExpressionUUID->"892bc3e3-501d-417b-904f-23d5ea3a5706"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146562, 2862, 916, 21, 28, "Input",ExpressionUUID->"dd6181f0-0a45-46ad-936d-eee013725ead"],
Cell[147481, 2885, 1726, 42, 246, "Output",ExpressionUUID->"d64c5e88-63fc-4a40-a26b-975162f68efd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149244, 2932, 894, 21, 28, "Input",ExpressionUUID->"4ebec804-dd52-47dd-ae13-d755c37a1988"],
Cell[150141, 2955, 1810, 44, 238, "Output",ExpressionUUID->"5d000db9-43ed-41ce-8134-28270daad6f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151988, 3004, 1003, 25, 28, "Input",ExpressionUUID->"7b0256f0-60a3-4861-bfde-6249117dca74"],
Cell[152994, 3031, 1776, 43, 245, "Output",ExpressionUUID->"0c47f4d7-292a-4d67-82a8-d33a04a371dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154807, 3079, 621, 16, 28, "Input",ExpressionUUID->"209f3121-0425-4c74-9c1b-82f6d24dc841"],
Cell[155431, 3097, 383, 7, 32, "Output",ExpressionUUID->"733c9606-6222-419b-bbd7-e37dd1199e15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155851, 3109, 593, 13, 32, "Input",ExpressionUUID->"3ab510df-f0a3-4004-991c-4603e824acbb"],
Cell[156447, 3124, 3559, 78, 238, "Output",ExpressionUUID->"632bb8a8-afd9-4fac-a193-495ecc207073"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160043, 3207, 585, 13, 32, "Input",ExpressionUUID->"d6cbf16f-ac74-48f4-8340-d278dbb093a4"],
Cell[160631, 3222, 7145, 136, 235, "Output",ExpressionUUID->"3bf2aa4d-d07e-408a-af2f-709b45e331e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167813, 3363, 304, 5, 28, "Input",ExpressionUUID->"0f94e0f7-6561-4b21-aa59-09e519526759"],
Cell[168120, 3370, 4258, 66, 67, "Message",ExpressionUUID->"3f09e01e-2bb6-4001-8b52-7052ab8ca459"],
Cell[172381, 3438, 10808, 214, 76, "Output",ExpressionUUID->"fca510de-ae4e-4b51-a6a0-79b35b7429e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183226, 3657, 921, 22, 28, "Input",ExpressionUUID->"a856c092-ddf0-4a3f-8100-d80c75faa061"],
Cell[184150, 3681, 1819, 44, 242, "Output",ExpressionUUID->"41222a3e-4748-4569-b7de-957fc3cf2af3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186006, 3730, 804, 18, 32, "Input",ExpressionUUID->"47f44720-431b-4b4d-8b77-65d17bed98d5"],
Cell[186813, 3750, 13178, 235, 240, "Output",ExpressionUUID->"02c3924a-3c78-4115-90be-2cf6db67952d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200028, 3990, 288, 5, 28, "Input",ExpressionUUID->"e3292315-71e8-42cb-b147-12b21ac9e6a3"],
Cell[200319, 3997, 13210, 234, 236, "Output",ExpressionUUID->"eb4d8d3f-0eb3-420d-b286-565db18a6e9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213566, 4236, 875, 21, 28, "Input",ExpressionUUID->"6405c00f-8816-4e7c-9838-2a74ad54ea0d"],
Cell[214444, 4259, 600, 13, 32, "Output",ExpressionUUID->"cb6af075-a729-4e1d-80e3-92bdd22baadd"],
Cell[215047, 4274, 67788, 1336, 534, "Print",ExpressionUUID->"458de89e-93b7-4849-b2d3-8e4f596a97b9"]
}, Open  ]]
}
]
*)

